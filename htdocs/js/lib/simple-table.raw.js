// Generated by CoffeeScript 1.6.2
(function() {
  var _ref, _ref1,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.TableRow = (function(_super) {
    __extends(TableRow, _super);

    function TableRow() {
      _ref = TableRow.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    TableRow.prototype.render = function() {
      this.$el.html(_.template(this.template, this.model.toJSON()));
      return this;
    };

    TableRow.prototype.tagName = "tr";

    TableRow.prototype.template = (function() {
      var t;

      return t = '\
    <td><%= first_name %></td>\
    <td><%= last_name %></td>\
    <td><%= email_address %></td>\
    ';
    })();

    return TableRow;

  })(Backbone.View);

  window.Table = (function(_super) {
    __extends(Table, _super);

    function Table() {
      _ref1 = Table.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    Table.prototype.className = "table";

    Table.prototype.initialize = function(options) {
      this.rows = [];
      return this.collection.on("reset", this._renderDelegates, this);
    };

    Table.prototype.render = function() {
      this.$el.html(this.template);
      this._renderDelegates();
      return this;
    };

    Table.prototype.template = (function() {
      var t;

      return t = '\
    <table>\
      <thead>\
        <tr>\
          <th class="first_name">First Name</th>\
          <th class="last_name">Last Name</th>\
          <th class="email_address">Email</th>\
        </tr>\
      </thead>\
      <tbody></tbody>\
    </table>\
    ';
    })();

    Table.prototype._renderDelegates = function() {
      var $tbody,
        _this = this;

      $tbody = this.$el.find("tbody");
      _.each(this.rows, function(row) {
        return row.remove();
      });
      return _.each(this.collection.models, function(model) {
        _this.rows.push(new window.TableRow({
          model: model
        }));
        return $tbody.append(_this.rows[_this.rows.length - 1].render().$el);
      });
    };

    return Table;

  })(Backbone.View);

}).call(this);
