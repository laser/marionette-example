// Generated by CoffeeScript 1.6.2
(function() {
  var _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.RawLayoutManagerView = (function(_super) {
    __extends(RawLayoutManagerView, _super);

    function RawLayoutManagerView() {
      _ref = RawLayoutManagerView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    RawLayoutManagerView.prototype.className = "layout-manager";

    RawLayoutManagerView.prototype.initialize = function() {
      this.activeContentView = new window.HomePageView();
      return this.regionEls = {};
    };

    RawLayoutManagerView.prototype.template = (function() {
      var t;

      return t = '\
    <div class="region navigation"></div>\
    <div class="region content"></div>\
    ';
    })();

    RawLayoutManagerView.prototype.render = function() {
      this.$el.append(this.template);
      this.regionEls = {
        "navigation": this.$el.find(".region.navigation"),
        "content": this.$el.find(".region.content")
      };
      this.regionEls.navigation.append(new window.SidebarView().render().$el);
      this.regionEls.content.append(this.activeContentView.render().$el);
      return this;
    };

    RawLayoutManagerView.prototype.swapContentView = function(ViewConstructor) {
      this.activeContentView.remove();
      this.activeContentView = new ViewConstructor();
      return this.regionEls.content.append(this.activeContentView.render().$el);
    };

    RawLayoutManagerView.prototype.showRawContacts = function() {
      return this.swapContentView(window.ContactsView);
    };

    RawLayoutManagerView.prototype.showRawProfile = function() {
      return this.swapContentView(window.ProfileView);
    };

    RawLayoutManagerView.prototype.showRawHome = function() {
      return this.swapContentView(window.HomePageView);
    };

    return RawLayoutManagerView;

  })(Backbone.View);

}).call(this);
