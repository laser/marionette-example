// Generated by CoffeeScript 1.6.2
(function() {
  var _ref, _ref1, _ref2,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.Paginator = (function(_super) {
    __extends(Paginator, _super);

    function Paginator() {
      _ref = Paginator.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Paginator.prototype.className = "paginator";

    Paginator.prototype.events = {
      "click a": "_onPageClicked"
    };

    Paginator.prototype.initialize = function(options) {
      this.data = options.data;
      this.rowsPerPage = 5;
      this.currentPage = 1;
      this._paginate(this.currentPage);
      return this.collection.on("reset", this._updateActiveLink, this);
    };

    Paginator.prototype.render = function() {
      this.$el.html(this.template);
      this._updateActiveLink();
      return this;
    };

    Paginator.prototype.template = (function() {
      var t;

      return t = '\
    Page:\
    <a href="#">1</a>\
    <a href="#">2</a>\
    <a href="#">3</a>\
    ';
    })();

    Paginator.prototype._onPageClicked = function(e) {
      return this._paginate(jQuery(e.target).text());
    };

    Paginator.prototype._paginate = function(page) {
      var begin, end;

      this.currentPage = page;
      begin = (page - 1) * 5;
      end = begin + this.rowsPerPage;
      return this.collection.reset(this.data.slice(begin, end));
    };

    Paginator.prototype._updateActiveLink = function() {
      this.$el.find("a").removeClass("active");
      return this.$el.find(":contains('" + this.currentPage + "')").addClass("active");
    };

    return Paginator;

  })(Backbone.View);

  window.Contact = (function(_super) {
    __extends(Contact, _super);

    function Contact() {
      _ref1 = Contact.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    return Contact;

  })(Backbone.Model);

  window.Contacts = (function(_super) {
    __extends(Contacts, _super);

    function Contacts() {
      _ref2 = Contacts.__super__.constructor.apply(this, arguments);
      return _ref2;
    }

    Contacts.prototype.model = window.Contact;

    return Contacts;

  })(Backbone.Collection);

  jQuery(document).ready(function() {
    var collection, data, paginator, table;

    data = [];
    _(15).times(function() {
      var id;

      id = Math.round(Math.random() * 1000).toString();
      return data.push({
        "first_name": "erin-" + id,
        "last_name": "smith-" + id,
        "email_address": "erin-" + id + "@example.com"
      });
    });
    collection = new window.Contacts();
    paginator = new window.Paginator({
      collection: collection,
      data: data
    });
    table = new window.Table({
      collection: collection
    });
    jQuery("#demo").append(table.render().$el);
    return jQuery("#demo").append(paginator.render().$el);
  });

}).call(this);
